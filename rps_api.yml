openapi: '3.0.2'
info:
  title: Rock, Paper, Scissors API
  description: Simple sample REST API to play the fun game of Rock, Paper, Scissors.
  version: '1.0'
servers:
  - url: http://localhost:8080/api/v1


components:
  schemas:
    Game:
      description: ''
      type: object
      properties:
        player1:
          $ref: '#/components/schemas/Player'
        player2:
          $ref: '#/components/schemas/Player'
        gameState:
          type: string
        result:
          $ref: '#/components/schemas/Result'
    Result:
      description: ''
      type: object
      properties:
        winnerId:
          type: string
          example: 'ddc4a373-6dd3-4a9d-9c0b-675a981f772c'
        message:
          type: string
          example: 'Rock beats scissors.'
    Player:
      description: ''
      type: object
      properties:
        id:
          type: string
          example: 'ddc4a373-6dd3-4a9d-9c0b-675a981f772c'
        name:
          type: string
          example: 'Tim'
        choice:
          $ref: '#/components/schemas/Choice'
    Choice:
      type: string
      enum: [rock, paper, scissors]
    GameState:
      type: string
      enum: [WAITING_FOR_PLAYERS, WAITING_FOR_CHOICES, DONE]
          
paths:
  /games:
    post:
      summary: 'Create game.'
      tags:
        - games
      description: ''
      parameters:
        - in: query
          name: mode
          schema:
            type: string
            enum: [PlayerVsComputer]
          description: The mode of the game.
      responses:
        '200':
          description: OK

  /games/{gameId}:
    get:
      summary: 'Read game.'
      tags:
        - games
      operationId:  getGame
      description: ''
      parameters: 
        - in: path
          name: gameId
          example: 'ddc4a373-6dd3-4a9d-9c0b-675a981f772c'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

  /games/{gameId}/players:
    post:
      summary: 'Join a running game.'
      tags:
        - players
      operationId:  postJoinGame
      description: ''
      parameters: 
        - in: path
          name: gameId
          example: 'ddc4a373-6dd3-4a9d-9c0b-675a981f772c'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

  /games/{gameId}/players/{playerId}:
    patch:
      summary: 'Make a choice (rock, paper, scissors).'
      tags:
        - players
      operationId:  patchChooseGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                choice:
                  $ref: '#/components/schemas/Choice'
      parameters: 
        - in: path
          name: gameId
          example: 'ddc4a373-6dd3-4a9d-9c0b-675a981f772c'
          required: true
          schema:
            type: string
        - in: path
          name: playerId
          example: 'ddc4a373-6dd3-4a9d-9c0b-675a981f772c'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'


tags:
  - name: games
    description: Manage Rock, Paper, Scissors games.
  - name: players
    description: Play the game.
